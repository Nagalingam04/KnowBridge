{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "82678394-6ad7-4f36-9ed3-cdbcad708dcb",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        0,
        0
      ],
      "id": "8872ae3e-b8b1-458d-9322-6f4893a1c1ee",
      "name": "Webhook",
      "webhookId": "82678394-6ad7-4f36-9ed3-cdbcad708dcb"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a helpful assistant. Answer user queries accurately and clearly. If needed, provide brief explanations or step-by-step reasoning. Ask clarifying questions if the query is unclear. Keep responses concise and relevant.\nHere is the query  {{ $json.body.query }}",
        "needsFallback": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        272,
        0
      ],
      "id": "560787fc-b6cf-468c-aafb-d326da7b5053",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        624,
        0
      ],
      "id": "d261e8a5-75ea-4eb9-a8c9-a741e9f18b7b",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "retrive the documents based on the user query\n",
        "qdrantCollection": {
          "__rl": true,
          "value": "production.kb",
          "mode": "list",
          "cachedResultName": "production.kb"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1.3,
      "position": [
        416,
        224
      ],
      "id": "5b102ed4-640a-4fbb-b224-b1fcddc38daf",
      "name": "Qdrant Vector Store",
      "credentials": {
        "qdrantApi": {
          "id": "2L8FkNALGNKKO3Zh",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "b99ea147-961d-4d93-af3b-8a23e0d32356",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -592,
        640
      ],
      "id": "a70963a7-55e1-4cb3-81bc-e1c15e52281a",
      "name": "Webhook1",
      "webhookId": "b99ea147-961d-4d93-af3b-8a23e0d32356"
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "value": "production.kb",
          "mode": "list",
          "cachedResultName": "production.kb"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1.3,
      "position": [
        -304,
        640
      ],
      "id": "c38dd25c-830a-40a9-82a0-a5cf44841e27",
      "name": "Qdrant Vector Store1",
      "credentials": {
        "qdrantApi": {
          "id": "2L8FkNALGNKKO3Zh",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        -144,
        976
      ],
      "id": "100956a1-9813-48c1-9ebb-ef02186e97d2",
      "name": "Character Text Splitter"
    },
    {
      "parameters": {
        "dataType": "binary",
        "textSplittingMode": "custom",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        -144,
        816
      ],
      "id": "d7f24a00-e227-47ca-9022-fbbf2ce274e0",
      "name": "Default Data Loader"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        -416,
        848
      ],
      "id": "092b461b-b72d-4ea3-a94e-6d36e58d385d",
      "name": "Embeddings Google Gemini",
      "credentials": {
        "googlePalmApi": {
          "id": "L0DGflbhDu2vCaaR",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        128,
        208
      ],
      "id": "f0b525c3-228d-43f2-8e15-5eb7b18f2dd7",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "L0DGflbhDu2vCaaR",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        512,
        432
      ],
      "id": "727a0e12-7204-42f7-8230-4923a97405b4",
      "name": "Embeddings Google Gemini1",
      "credentials": {
        "googlePalmApi": {
          "id": "L0DGflbhDu2vCaaR",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        224,
        304
      ],
      "id": "3f721e59-0c19-4f2e-b797-916d0b1e4fb9",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "L0DGflbhDu2vCaaR",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "youtube-to-kb",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        608,
        608
      ],
      "id": "5409e215-6e47-41ba-94f6-0861c025725a",
      "name": "Webhook2",
      "webhookId": "2712866a-53f1-4f89-a5bd-02ac4d6df668"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://www.youtube-transcript.io/api/transcripts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Basic 689ce241ac1a716cf0b0fb3e"
            },
            {
              "name": "Content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\"ids\":[\"{{ $json.video_id }}\"]}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1024,
        608
      ],
      "id": "bc106aec-dcb9-48fe-b822-336a6eb677d1",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "value": "production.kb",
          "mode": "list",
          "cachedResultName": "production.kb"
        },
        "options": {
          "collectionConfig": ""
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1.3,
      "position": [
        1472,
        608
      ],
      "id": "ed6afd53-7b65-48e2-b5c1-072723cb9686",
      "name": "Qdrant Vector Store2",
      "credentials": {
        "qdrantApi": {
          "id": "2L8FkNALGNKKO3Zh",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        1376,
        816
      ],
      "id": "d940669a-c0dd-4ce8-b240-2390666366e8",
      "name": "Embeddings Google Gemini2",
      "credentials": {
        "googlePalmApi": {
          "id": "L0DGflbhDu2vCaaR",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "textSplittingMode": "custom",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        1552,
        816
      ],
      "id": "2640464e-0102-4de6-a4d2-e10e3281ac4a",
      "name": "Default Data Loader1"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        1552,
        992
      ],
      "id": "c9186eae-1633-4dea-b4d1-1b8760ccc4d4",
      "name": "Character Text Splitter1"
    },
    {
      "parameters": {
        "jsCode": "return{\n  json:{\n    fullTranscript: items[0].json.tracks[0].transcript.map(segment => segment.text).join(' ')\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1232,
        608
      ],
      "id": "18d8b0eb-4fe3-45b0-9160-6d911a05d9c5",
      "name": "Code2"
    },
    {
      "parameters": {
        "jsCode": "// Get the YouTube URL from the incoming JSON\nconst url = $input.first().json.body.url; // Safe access\n\nfunction getYouTubeId(url) {\n    if (!url) return null;\n    try {\n        const parsed = new URL(url);\n        if (parsed.hostname.includes(\"youtu.be\")) {\n            return parsed.pathname.slice(1); // Removes the leading \"/\"\n        }\n        if (parsed.hostname.includes(\"youtube.com\")) {\n            return parsed.searchParams.get(\"v\");\n        }\n    } catch (e) {\n        // fallback regex if URL parsing fails\n        if (typeof url === 'string') {\n            const match = url.match(/([a-zA-Z0-9_-]{11})/);\n            return match ? match[1] : null;\n        }\n    }\n    return null;\n}\n\nreturn [\n    {\n        json: {\n            video_id: getYouTubeId(url)\n        }\n    }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        816,
        608
      ],
      "id": "75285367-39fd-4559-ae53-c5fadb66e6bc",
      "name": "Code"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "Qdrant Vector Store1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Qdrant Vector Store1",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini1": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 1
          }
        ]
      ]
    },
    "Webhook2": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini2": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store2",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader1": {
      "ai_document": [
        [
          {
            "node": "Qdrant Vector Store2",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter1": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader1",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Qdrant Vector Store2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "34d4db6b-a0bd-4017-80b4-c3625e25fd26",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "04e770d6fcd5279ab03526c57fc0a80e093b12d911ae2ea5892107047f869a66"
  },
  "id": "O7IDURzVz05taDl3",
  "tags": []
}